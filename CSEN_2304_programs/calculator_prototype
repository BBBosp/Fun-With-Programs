#include<stdio.h>

unsigned gcd(unsigned x, unsigned y);
long long int gcd_A( long long int n,long long int A[n]);
long long int LCM(long long int *a, long long int first, long long int last, long long int GCD);
long long int asc_sort( long long int *a, long long int size);
long long int desc_sort( long long int *a, long long int size);
long long int product_of_array( long long int *a, long long int size);
long long int sum_of_array( long long int *a, long long int size);


int main(void)
{
    //long long int a[10]={112, 160, 180, 240, 288, 32, 480, 96, 60, 72};   //array before use of input file
    
    FILE *file = fopen("input_file.txt", "r");
    long long int a[10];

    int i=0;
    long long int num;
    while(fscanf(file, "%lld", &num) > 0) 
    {
        a[i] = num;
        i++;
    }
    fclose(file);






    int max, min;
    long long int size_a = sizeof(a)/sizeof(*a);
    float product = product_of_array(a,size_a);
    float sum = sum_of_array(a,size_a);    
    long long int gcd = gcd_A(size_a, a);
    long long int lcm = LCM(a, 0, size_a-1, gcd);
    asc_sort(a, size_a);
    min = a[0];
    max = a[9];
 
    

//following comments are placed for troubleshooting functions
    //for(i=0;i<10;i++)
    //{
    //    printf("%lld\n",a[i]);
    //}

    //printf("%lld\n",a[1]);
    //printf("%lld\n",lcm);
    //printf("%lld\n", gcd);

    //asc_sort(a, size_a);
    //for(i=0;i<10;i++)
    //{
    //    printf("%lld\n", a[i]);
    //}
    
    //desc_sort(a, size_a);
    //for(i=0;i<10;i++)
    //{
    //    printf("%lld\n", a[i]);
    //}
    
    //sum_of_array(a,size_a);
    //printf("%f",product);
    //product_of_array(a,size_a);
    printf("%f\n",product);
    //printf("%f\n",sum);
    //printf("%d   %d", min, max);

    return 0;
}


unsigned gcd(unsigned x, unsigned y)
{
    unsigned wk;
    if(x<y){ wk=x;x=y;y=wk; }
    while(y){
        wk = x%y;
        x=y;
        y=wk;
    }
    return x;
}

long long int gcd_A( long long int n,long long int A[n])
{
    if(n==1) return A[0];
    if(n==2) return gcd(A[0], A[1]);
    int h = n / 2;
    return gcd(gcd_A(h, &A[h-1]), gcd_A(n - h, &A[h]));
}
	
long long int LCM(long long int *a, long long int first, long long int last, long long int GCD)
{
    long long int lcm=a[first], i=0;
    for(i=first+1; i<=last; i++)
    {//printf("%lld  %lld\n",lcm,a[i]);
      if(lcm < 0)
       {
        lcm = -lcm;
	//printf("%lld\n",lcm);
        }
      if(a[i] < 0)
       {
        a[i] = -a[i]; 
	//printf("%lld\n",a[1]); 
        }
      lcm= lcm*a[i]/GCD;
      //printf("%lld\n",lcm);
    }
    
    return lcm;
}


long long int asc_sort( long long int *a, long long int size)
{   
    int c, d, swap;  
    for (c = 0 ; c < ( size - 1 ); c++)
    {
        for (d = 0 ; d < size - c - 1; d++)
        {
            if (a[d] > a[d+1]) /* For decreasing order use < */
            {
                swap       = a[d];
                a[d]   = a[d+1];
                a[d+1] = swap;
             }
         }
     }
}


long long int desc_sort( long long int *a, long long int size)
{   
    int c, d, swap;  
    for (c = 0 ; c < ( size - 1 ); c++)
    {
        for (d = 0 ; d < size - c - 1; d++)
        {
            if (a[d] < a[d+1]) /* For increasing order use < */
            {
                swap       = a[d];
                a[d]   = a[d+1];
                a[d+1] = swap;
             }
         }
     }
}

long long int sum_of_array( long long int *a, long long int size)
{
    float sum = 0;
    int i;
    for(i=0;i< (size); i++)
    {
        //printf("%d   %lld\n", sum, a[i]);
        sum= sum+a[i];
        //printf("%d\n", sum);
    }
    //printf("%f\n", sum);
    return sum;
}

long long int product_of_array( long long int *a, long long int size)
{
    float product = 1;
    int i;
    for(i=0;i< (size); i++)
    {
        //printf("%f   %lld\n", product, a[i]);
        product= product*a[i];
        //printf("%f\n", product);
    }
    printf("%f\n", product);
    return product;
}



